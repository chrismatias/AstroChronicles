# -*- coding: utf-8 -*-
"""
Created March 2023
Dependencies: 

    Flask==2.2.3
    openai==0.27.4
    pip==23.0.1
    pipdeptree==2.7.0
    setuptools==65.6.3
    wheel==0.38.4
    wincertstore==0.2
    
Python Version #3.9

    Astro Chronicles is a Flask web application that 
    showcases a daily new picture and a 
    two sentence story generated by ChatGPT based on the picture's 
    title, integratating various technologies such as HTML, CSS, JavaScript, 
    JSON, Bootstrap 3.0, the OpenAI API, NASA APOD API, 
    and Flask Web Framework. 
    
@author: Christopher Matias Pena 
"""

from flask import Flask, render_template
import requests
import json
import os
import openai

k = 'YOUR-API-KEY-HERE' #openAI KEY
openai.api_key = k 

#main wrapper for Flask web app applicaton
app = Flask(__name__, template_folder='templates', static_folder = 'static')

###########

@app.route("/")
def index():
    
    string = get_Picture()
    title = get_Title()
    story = iStory()
    return render_template('index.html', variable=string, variable2=title, variable3=story) #passes in function outputs 
        
     
#function to get URL from NASA website
def get_Picture():
    response = json.loads(requests.get("https://api.nasa.gov/planetary/apod?api_key=[YOUR-API-KEY-HERE]").text)
    image_url= response['hdurl']
    
    return image_url
 
#function to get title from NASA APOD
def get_Title():
    response = json.loads(requests.get("https://api.nasa.gov/planetary/apod?api_key=[YOUR-API-KEY-HERE]").text)
    image_title = response['title']
    
    return image_title
        
#function to get story based on APOD title
def iStory():
    response = json.loads(requests.get("https://api.nasa.gov/planetary/apod?api_key=[YOUR-API-KEY-HERE]").text)
    promptText = response['title']
    os.getenv(k)


    storyAi = openai.Completion.create(
      model="text-davinci-003",
      prompt="Topic: " + promptText +"\nTwo-Sentence Climactic Sci-fi Horror Story with correct punctuation:",
      temperature=0.8,
      max_tokens=60,
      top_p=1.0,
      frequency_penalty=0.5,
      presence_penalty=0.0
    )
    
    
    results = []

    for choice in storyAi.choices: #adds text into array for displaying 
        text = choice.text.strip()
        text = text.replace('[', '')  # Remove '[' character
        text = text.replace('"', '')  # Remove '"' character
        text = text.replace('\n', '')
        results.append(text)
        
    return text
if __name__ == "__main__":
    app.run(host="127.0.0.1", port=8080, debug=True)

